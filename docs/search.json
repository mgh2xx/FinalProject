[
  {
    "objectID": "datacleaning.html",
    "href": "datacleaning.html",
    "title": "2  Data Cleaning",
    "section": "",
    "text": "2.0.1 Loading in Data\nThis code chunk loads in the catapult data for each season from the data folder. Then, data from each season is marked with a season indicator column, before being combined into a single season. Next, the columns of the data are limited to the variables relevant for this study.\n\n# Imports\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n\n# Loading in data from season 1 and 2\ns1 = pd.read_csv(\"./data/catapult season 1.csv\")\ns2 = pd.read_csv(\"./data/catapult season 2.csv\")\n\n# Adding column with season to each dataset\ns1[\"Season\"] = 1\ns2[\"Season\"] = 2\n\n# Combining the two seasons of data into a single data frame\ndata = pd.concat([s1, s2])\n\n# Converting date column to datetime\ndata[\"Date\"] = pd.to_datetime(data[\"Date\"])\n\n# List of Variables Relevant to our Project\ncolumns_of_interest = [\"Date\", \"About\", \"Period\", \"Player Load Per Minute\", \"IMA Accel Low\", \"IMA Accel High\", \"IMA Accel Total\", \"IMA Jump Count Low Band\", \"IMA Jump Count Med Band\", \"IMA Jump Count High Band\", \"Season\"]\n\n# Filtering data frame to include only relevant variables\ndata = data[columns_of_interest]\n\n# Showing first row\ndata.head(1)\n\n\n\n\n\n\n\n\nDate\nAbout\nPeriod\nPlayer Load Per Minute\nIMA Accel Low\nIMA Accel High\nIMA Accel Total\nIMA Jump Count Low Band\nIMA Jump Count Med Band\nIMA Jump Count High Band\nSeason\n\n\n\n\n0\n2023-03-14\nAthlete I\n1. Pre Practice\n4.1\n3\n1\n4\n0\n17\n5\n1\n\n\n\n\n\n\n\n\n\n2.0.2 Selecting Game Data\nNext, the data set is limited to include only data from game periods. Overtime periods are removed from the data as well, to standardize the game length to two halves.\n\n# Making a temporary data frame which includes only game data\n\n# Filtering to include 'Period' - the keyword for game periods\ngames = data[data[\"Period\"].str.contains(\"Period\") == True]\n\n# Filtering to exclude 'Play' - a keyword which also has period used for scrimmages\ngames = games[games[\"Period\"].str.contains(\"Play\") == False]\n\n# Filtering to exclude 'Auto' - a keyword used to code periods that are automatically coded\ngames = games[games[\"Period\"].str.contains(\"Auto\") == False]\n\n# Filtering to exclude 'Period 3' - these are overtime periods, not relevant to work\ngames = games[games[\"Period\"].str.contains(\"Period 3\") == False]\n\n# Renaming the periods to be easier to understand\ngames.loc[games[\"Period\"].str.contains(\"Period 1\"), \"Period\"] = \"Game Half 1\"\ngames.loc[games[\"Period\"].str.contains(\"Period 2\"), \"Period\"] = \"Game Half 2\"\n\n# Showing first 2 rows of temp data frame\ngames.sort_values(by = [\"Date\", \"About\"]).head(2)\n\n\n\n\n\n\n\n\nDate\nAbout\nPeriod\nPlayer Load Per Minute\nIMA Accel Low\nIMA Accel High\nIMA Accel Total\nIMA Jump Count Low Band\nIMA Jump Count Med Band\nIMA Jump Count High Band\nSeason\n\n\n\n\n12285\n2022-11-07\nAthlete A\nGame Half 1\n9.5\n13\n4\n25\n10\n5\n6\n1\n\n\n12286\n2022-11-07\nAthlete A\nGame Half 2\n9.5\n8\n0\n11\n6\n1\n3\n1\n\n\n\n\n\n\n\n\n\n2.0.3 Aggregating Stats\nIn its original format, the data for each game is split between halves. This code chunk limits the data to include only games where the player plays both halves, then properly aggregates the stats from the two halves into a single game value.\n\n# Number of halves by player by date. This will be used to filter out games where the player played only  1 half \nhalf_counts = games.groupby(['Date', 'About', 'Season'])['Period'].count().reset_index(name = 'Half Count')\n\n# Adding half_counts to the games df\ngames = games.merge(half_counts, on = ['Date', 'About', 'Season'])\n\n# Filtering out games that don't have 2 halves played by the player\nfull_games = games[games['Half Count'] == 2]\n\n# Aggregating the values\ngames_agg = full_games.groupby(['Date', 'About', 'Season'], as_index = False).agg(\n    {\n    'Player Load Per Minute': 'mean',\n    'IMA Accel Low': 'sum',\n    'IMA Accel High': 'sum',\n    'IMA Accel Total' : 'sum',\n    'IMA Jump Count Low Band' : 'sum',\n    'IMA Jump Count Med Band' : 'sum',\n    'IMA Jump Count High Band' : 'sum',\n    })\n\n# Putting Period label back in to match scrims data frame when merged\ngames_agg['Period'] = 'Game'\n\n# Re-ordering columns\ncolumns = ['Date', 'About', 'Period', 'Player Load Per Minute', 'IMA Accel Low', 'IMA Accel High', 'IMA Accel Total', 'IMA Jump Count Low Band', 'IMA Jump Count Med Band', 'IMA Jump Count High Band', 'Season']\ngames_agg = games_agg[columns]\n\n# Showing row of df\ngames_agg.head(1)\n\n\n\n\n\n\n\n\nDate\nAbout\nPeriod\nPlayer Load Per Minute\nIMA Accel Low\nIMA Accel High\nIMA Accel Total\nIMA Jump Count Low Band\nIMA Jump Count Med Band\nIMA Jump Count High Band\nSeason\n\n\n\n\n0\n2022-11-07\nAthlete A\nGame\n9.5\n21\n4\n36\n16\n6\n9\n1\n\n\n\n\n\n\n\n\n\n2.0.4 Finalizing the Data\nLastly, proportion versions of the cumulative statistics tracked by Catapult were added to the data set. Because playing time varies greatly by player, using cumulative totals would have been misleading, so this allows for the proportion of each statistics to be examined. The final data set is then saved into the data folder to be used for EDA and visualization.\n\n# Concatenating the games and scrimmage data frames back into one data frame\ndata = games_agg\n\n# Making variables to hold high accel and jump proportions\ndata[\"Prop_Accel_High\"] = data[\"IMA Accel High\"] / data[\"IMA Accel Total\"]\ndata[\"Prop_Jump_High\"] = data[\"IMA Jump Count High Band\"] / (data[\"IMA Jump Count High Band\"] + data[\"IMA Jump Count Low Band\"] + data[\"IMA Jump Count Med Band\"])\ndata[\"Prop_Jump_Med\"] = data[\"IMA Jump Count Med Band\"] / (data[\"IMA Jump Count High Band\"] + data[\"IMA Jump Count Low Band\"] + data[\"IMA Jump Count Med Band\"])\ndata[\"Prop_Jump_Low\"] = data[\"IMA Jump Count Low Band\"] / (data[\"IMA Jump Count High Band\"] + data[\"IMA Jump Count Low Band\"] + data[\"IMA Jump Count Med Band\"])\n\n# Getting rid of Ben Vander Plas, who presumably shouldn't have his name in the data\ndata = data[data[\"About\"] != \"Ben Vander Plas\"]\n\n# Saving the cleaned data\ndata.to_csv('./data/cleaned_data.csv', index = False)\n\n# Showing first 3 rows of combined data\ndata.head(3)\n\n\n\n\n\n\n\n\nDate\nAbout\nPeriod\nPlayer Load Per Minute\nIMA Accel Low\nIMA Accel High\nIMA Accel Total\nIMA Jump Count Low Band\nIMA Jump Count Med Band\nIMA Jump Count High Band\nSeason\nProp_Accel_High\nProp_Jump_High\nProp_Jump_Med\nProp_Jump_Low\n\n\n\n\n0\n2022-11-07\nAthlete A\nGame\n9.5\n21\n4\n36\n16\n6\n9\n1\n0.111111\n0.290323\n0.193548\n0.516129\n\n\n1\n2022-11-07\nAthlete C\nGame\n8.4\n20\n3\n32\n29\n14\n6\n1\n0.093750\n0.122449\n0.285714\n0.591837\n\n\n2\n2022-11-07\nAthlete D\nGame\n8.9\n37\n11\n62\n35\n11\n22\n1\n0.177419\n0.323529\n0.161765\n0.514706",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data Cleaning</span>"
    ]
  }
]